name: Build and Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create application properties from secret
        run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./application.properties
                    
          echo "application-prod.properties has been created from secret."
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./safeRent
          file: ./safeRent/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/safeRent:latest
          
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            touch ~/docker-compose.yml
            echo "${{ secrets.DOCKER_COMPOSE }}" > ~/docker-compose.yml            
            
            # Docker Compose 실행
            docker rmi $(docker images -q)
            docker-compose pull
            docker-compose down || true
            docker-compose up -d
            
            echo "애플리케이션이 성공적으로 배포되었습니다."
