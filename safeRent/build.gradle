plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	
    id 'checkstyle'  // checkstyleMain, checkstyleTest 태스크 사용 가능
    id 'pmd'         // pmdMain 태스크 사용 가능
    id 'jacoco'      // jacocoTestReport 태스크 사용 가능
    id 'com.github.spotbugs' version '5.0.13'  // spotbugsMain 태스크 사용 가능
}

checkstyle {
    toolVersion = '10.3.3'
    // Google 체크스타일 규칙 사용
    configFile = resources.text.fromUri("https://raw.githubusercontent.com/checkstyle/checkstyle/master/src/main/resources/google_checks.xml").asFile()
    // 또는 더 단순한 규칙 세트로 시작
    // configFile = resources.text.fromString("<?xml version='1.0'?><module name='Checker'><module name='TreeWalker'><module name='UnusedImports'/></module></module>").asFile()
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	implementation 'software.amazon.awssdk:s3:2.20.123' // AWS S3
    implementation 'software.amazon.awssdk:ec2:2.20.123' // AWS EC2
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
